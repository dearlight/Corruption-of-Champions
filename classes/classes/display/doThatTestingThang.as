package classes.display {
import classes.EngineCore;

internal function doThatTestingThang(debugPane:Function):void {
    EngineCore.clearOutput();
    EngineCore.outputText("\n\n");
    // Excercise the parser. This should catch parser regressions, I think.

    EngineCore.outputText("**Parser Tests!**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("##Bracket escaping!##\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* \\\[cock\\\]\n");
    EngineCore.outputText("* [cock]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**Single word nouns**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* \\\[armor\\\] - [armor]\n");
    EngineCore.outputText("* \\\[armorname\\\] - [armorname]\n");
    EngineCore.outputText("* \\\[weapon\\\] - [weapon]\n");
    EngineCore.outputText("* \\\[weaponname\\\] - [weaponname]\n");
    EngineCore.outputText("* \\\[name\\\] - [name]\n");
    EngineCore.outputText("* \\\[asshole\\\] - [asshole]\n");
    EngineCore.outputText("* \\\[butthole\\\] - [butthole]\n");
    EngineCore.outputText("* \\\[hair\\\] - [hair]\n");
    EngineCore.outputText("* \\\[face\\\] - [face]\n");
    EngineCore.outputText("* \\\[legs\\\] - [legs]\n");
    EngineCore.outputText("* \\\[leg\\\] - [leg]\n");
    EngineCore.outputText("* \\\[feet\\\] - [feet]\n");
    EngineCore.outputText("* \\\[foot\\\] - [foot]\n");
    EngineCore.outputText("* \\\[sack\\\] - [sack]\n");
    EngineCore.outputText("* \\\[balls\\\] - [balls]\n");
    EngineCore.outputText("* \\\[sheath\\\] - [sheath]\n");
    EngineCore.outputText("* \\\[chest\\\] - [chest]\n");
    EngineCore.outputText("* \\\[fullchest\\\] - [fullchest]\n");
    EngineCore.outputText("* \\\[hips\\\] - [hips]\n");
    EngineCore.outputText("* \\\[butt\\\] - [butt]\n");
    EngineCore.outputText("* \\\[ass\\\] - [ass]\n");
    EngineCore.outputText("* \\\[nipple\\\] - [nipple]\n");
    EngineCore.outputText("* \\\[nipples\\\] - [nipples]\n");
    EngineCore.outputText("* \\\[tongue\\\] - [tongue]\n");
    EngineCore.outputText("* \\\[evade\\\] - [evade]\n");
    EngineCore.outputText("* \\\[misdirection\\\] - [misdirection]\n");
    EngineCore.outputText("* \\\[agility\\\] - [agility]\n");
    EngineCore.outputText("* \\\[master\\\] - [master]\n");
    EngineCore.outputText("* \\\[master\\\] - [master]\n");
    EngineCore.outputText("* \\\[he\\\] - [he]\n");
    EngineCore.outputText("* \\\[him\\\] - [him]\n");
    EngineCore.outputText("* \\\[his\\\] - [his]\n");
    EngineCore.outputText("* \\\[pussy\\\] - [pussy]\n");
    EngineCore.outputText("* \\\[vagina\\\] - [vagina]\n");
    EngineCore.outputText("* \\\[vag\\\] - [vag]\n");
    EngineCore.outputText("* \\\[clit\\\] - [clit]\n");
    EngineCore.outputText("* \\\[cock\\\] - [cock]\n");
    EngineCore.outputText("* \\\[cocks\\\] - [cocks]\n");
    EngineCore.outputText("* \\\[eachcock\\\] - [eachcock]\n");
    EngineCore.outputText("* \\\[onecock\\\] - [onecock]\n");
    EngineCore.outputText("* \\\[cockhead\\\] - [cockhead]\n");
    EngineCore.outputText("* \\\[vagorass\\\] - [vagorass]\n");
    EngineCore.outputText("* \\\[hairorfur\\\] - [hairorfur]\n");
    EngineCore.outputText("* \\\[pg\\\] - [pg] (This is a shortcut to two newlines. This should be two lines below the \\\[pg\\\])\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**Single-word function calls and parameter lookups**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* \\\[player.face\\\] - [player.face]\n");
    EngineCore.outputText("* \\\[allChestDesc\\\] - [allChestDesc]\n");
    EngineCore.outputText("* \\\[player.armorName\\\] - [player.armorName]\n");
    EngineCore.outputText("* \\\[player.skinFurScales\\\] - [player.skinFurScales]\n");
    EngineCore.outputText("* \\\[chestDesc\\\] - [chestDesc]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**Two word nouns**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* \\\[cock all\\\] - [cock all]\n");
    EngineCore.outputText("* \\\[cock each\\\] - [cock each]\n");
    EngineCore.outputText("* \\\[cock one\\\] - [cock one]\n");
    EngineCore.outputText("* \\\[cock largest\\\] - [cock largest]\n");
    EngineCore.outputText("* \\\[cock biggest\\\] - [cock biggest]\n");
    EngineCore.outputText("* \\\[cock smallest\\\] - [cock smallest]\n");
    EngineCore.outputText("* \\\[cock longest\\\] - [cock longest]\n");
    EngineCore.outputText("* \\\[cock shortest\\\] - [cock shortest]\n");
    EngineCore.outputText("* \\\[cock 0\\\] - [cock 0]  (This should always error)\n");
    EngineCore.outputText("* \\\[cock 1\\\] - [cock 1]\n");
    EngineCore.outputText("* \\\[cock 2\\\] - [cock 2]\n");
    EngineCore.outputText("* \\\[cockHead biggest\\\] - [cockHead biggest]\n");
    EngineCore.outputText("* \\\[cockHead largest\\\] - [cockHead largest]\n");
    EngineCore.outputText("* \\\[cockHead smallest\\\] - [cockHead smallest]\n");
    EngineCore.outputText("* \\\[cockHead longest\\\] - [cockHead longest]\n");
    EngineCore.outputText("* \\\[cockHead shortest\\\] - [cockHead shortest]\n");
    EngineCore.outputText("* \\\[cockHead 0\\\] - [cockHead 0]  (This should always error)\n");
    EngineCore.outputText("* \\\[cockHead 1\\\] - [cockHead 1]\n");
    EngineCore.outputText("* \\\[cockHead 2\\\] - [cockHead 2]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**Boolean tests**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* 1 \\\[if (4==4) HERP|DERP\\\]\n");
    EngineCore.outputText("* 1 [if (4==4) HERP|DERP]\n");
    EngineCore.outputText("* 2 \\\[if (4 == 7) HERP|DERP\\\]\n");
    EngineCore.outputText("* 2 [if (4 == 7) HERP|DERP]\n");
    EngineCore.outputText("* 3 \\\[if (4==(2+2)) HERP|DERP\\\]\n");
    EngineCore.outputText("* 3 [if (4==(2+2)) HERP|DERP]\n");
    EngineCore.outputText("* 4 \\\[if (4==4) HERP|DERP\\\]\n");
    EngineCore.outputText("* 4 [if (4==4) HERP|DERP]\n");
    EngineCore.outputText("* 5 \\\[if (4==7) [if (4==7) HERP]\\\]\n");
    EngineCore.outputText("* 5 [if (4==7) [if (4==7) HERP]]\n");
    EngineCore.outputText("* 6 \\\[if (4==7) [if (4==7) HERP|DERP]\\\]\n");
    EngineCore.outputText("* 6 [if (4==7) [if (4==7) HERP|DERP]]\n");
    EngineCore.outputText("* 7 \\\[if (4=4) [if (4=4) HERP]\\\]\n");
    EngineCore.outputText("* 7 [if (4=4) [if (4=4) HERP]]\n");
    EngineCore.outputText("* 8 \\\[if (4==4) [if (4==4) HERP]\\\]\n");
    EngineCore.outputText("* 8 [if (4==4) [if (4==4) HERP]]\n");
    EngineCore.outputText("* 9 \\\[if (4==biggesttitsize) \\\]\n");
    EngineCore.outputText("* 9 [if (4==biggesttitsize) ]\n");
    EngineCore.outputText("* 10 \\\[if (4==biggesttitsize) HERP|DERP\\\]\n");
    EngineCore.outputText("* 10 [if (4==biggesttitsize) HERP|DERP]\n");
    EngineCore.outputText("* 11 \\\[if (analcapacity>3)    HERP|DERP\\\]\n");
    EngineCore.outputText("* 11 [if (analcapacity>3)    HERP|DERP]\n");
    EngineCore.outputText("* 12 \\\[if (analcapacity>3) HERP|DERP\\\]\n");
    EngineCore.outputText("* 12 [if (analcapacity>3) HERP|DERP]\n");
    EngineCore.outputText("* 13 \\\[if (analcapacity = 0)  HERP|DERP\\\]\n");
    EngineCore.outputText("* 13 [if (analcapacity = 0)  HERP|DERP]\n");
    EngineCore.outputText("* 14 \\\[if (analcapacity = 0) HERP|DERP\\\]\n");
    EngineCore.outputText("* 14 [if (analcapacity = 0) HERP|DERP]\n");
    EngineCore.outputText("* 15 \\\[if (analcapacity > 0)  HERP|DERP\\\]\n");
    EngineCore.outputText("* 15 [if (analcapacity > 0)  HERP|DERP]\n");
    EngineCore.outputText("* 16 \\\[if (analcapacity > 0) HERP|DERP\\\]\n");
    EngineCore.outputText("* 16 [if (analcapacity > 0) HERP|DERP]\n");
    EngineCore.outputText("* 17 \\\[if (hasCock == True) HERP|DERP\\\]\n");
    EngineCore.outputText("* 17 [if (hasCock == True) HERP|DERP]\n");
    EngineCore.outputText("* 18 \\\[if (hasVagina == True) HERP|DERP\\\]\n");
    EngineCore.outputText("* 18 [if (hasVagina == True) HERP|DERP]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("** Member Accessors**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* 19 \\\[if (player.biggestLactation > 0) HERP|DERP\\\]\n");
    EngineCore.outputText("* 19 [if (player.biggestLactation > 0) HERP|DERP]\n");
    EngineCore.outputText("* 20 \\\[if (player.biggestLactation > 0)  \\\[if (hasVagina == True) LOL|WAT\\\]|DERP\\\]\n");
    EngineCore.outputText("* 20 [if (player.biggestLactation > 0)  [if (hasVagina == True) LOL|WAT]|DERP]\n");
    EngineCore.outputText("* 21 \\\[if (player.str > 0)  HERP|DERP\\\]\n");
    EngineCore.outputText("* 21 [if (player.str > 0)  HERP|DERP]\n");
    EngineCore.outputText("* 22 \\\[if (player.inte > 0)  HERP|DERP\\\]\n");
    EngineCore.outputText("* 22 [if (player.inte > 0)  HERP|DERP]\n");
    EngineCore.outputText("* 23 \\\[if (player.biggestTitSize > 0)  HERP|DERP\\\]\n");
    EngineCore.outputText("* 23 [if (player.biggestTitSize > 0)  HERP|DERP]\n");
    EngineCore.outputText("* 24 \\\[if (player.biggestLactation > 0)  HERP|DERP\\\]\n");
    EngineCore.outputText("* 24 [if (player.biggestLactation > 0)  HERP|DERP]\n");
    EngineCore.outputText("* 25 \\\[if (player.isBiped == true) IS A BIPEDDDDD | not a biped. Wat?\\\]\n");
    EngineCore.outputText("* 25 [if (player.isBiped == true) IS A BIPEDDDDD | not a biped. Wat?]\n");
    EngineCore.outputText("* 26 \\\[if (player.isBiped) IS A BIPEDDDDD | not a biped. Wat?\\\]\n");
    EngineCore.outputText("* 26 [if (player.isBiped) IS A BIPEDDDDD | not a biped. Wat?]\n");
    EngineCore.outputText("* 27 \\\[if (player.isBipd) IS A BIPEDDDDD | not a biped. Wat?\\\]\n");
    EngineCore.outputText("* 27 [if (player.isBipd) IS A BIPEDDDDD | not a biped. Wat?]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**Arbitrary function calls**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* \\\[eCockDescript 0\\\] - [eCockDescript 0]\n");
    EngineCore.outputText("* \\\[eCockDescript\\\] - [eCockDescript]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* \\\[cockDescript 0\\\] - [cockDescript 0]\n");
    EngineCore.outputText("* \\\[cockDescript\\\] - [cockDescript]\n");
    EngineCore.outputText("* Generic function calls will be cast to string\n");
    EngineCore.outputText("* \\\[player.cumQ\\\] - [player.cumQ]\n");
    EngineCore.outputText("* `\[kFLAGS_REF.ARIAN_COCK_SIZE\]` - [kFLAGS_REF.ARIAN_COCK_SIZE]\n");
    EngineCore.outputText("* `\[flags kFLAGS_REF.ARIAN_COCK_SIZE\]` - [flags kFLAGS_REF.ARIAN_COCK_SIZE]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**Gender tests**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**PC**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* \\\[He\\\]  - [He]\n");
    EngineCore.outputText("* \\\[he\\\]  - [he]\n");
    EngineCore.outputText("* \\\[His\\\]  - [His]\n");
    EngineCore.outputText("* \\\[his\\\]  - [his]\n");
    EngineCore.outputText("* \\\[Him\\\]  - [Him]\n");
    EngineCore.outputText("* \\\[him\\\]  - [him]\n");
    EngineCore.outputText("* \\\[his\\\]  - [his]\n");
    EngineCore.outputText("* \\\[His\\\]  - [His]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**NPC**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**Rubi**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* \\\[rubi ey\\\] - [rubi ey]\n");
    EngineCore.outputText("* \\\[rubi eir\\\] - [rubi eir]\n");
    EngineCore.outputText("* \\\[rubi eirs\\\] - [rubi eirs]\n");
    EngineCore.outputText("* \\\[rubi emself\\\] - [rubi emself]\n");
    EngineCore.outputText("* \\\[rubi Ey\\\] - [rubi Ey]\n");
    EngineCore.outputText("* \\\[rubi Eir\\\] - [rubi Eir]\n");
    EngineCore.outputText("* \\\[rubi Eirs\\\] - [rubi Eirs]\n");
    EngineCore.outputText("* \\\[rubi Emself\\\] - [rubi Emself]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**Arian**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* \\\[arian ey\\\] - [arian ey]\n");
    EngineCore.outputText("* \\\[arian eir\\\] - [arian eir]\n");
    EngineCore.outputText("* \\\[arian eirs\\\] - [arian eirs]\n");
    EngineCore.outputText("* \\\[arian emself\\\] - [arian emself]\n");
    EngineCore.outputText("* \\\[arian Ey\\\] - [arian Ey]\n");
    EngineCore.outputText("* \\\[arian Eir\\\] - [arian Eir]\n");
    EngineCore.outputText("* \\\[arian Eirs\\\] - [arian Eirs]\n");
    EngineCore.outputText("* \\\[arian Emself\\\] - [arian Emself]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**NPC Aspect tests**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* \\\[arian chest\\\] - [arian chest]\n");
    EngineCore.outputText("* \\\[arian chestAdj\\\] - [arian chestAdj]\n");
    EngineCore.outputText("* \\\[rubi breasts\\\] - [rubi breasts]\n");
    EngineCore.outputText("* \\\[rubi cock\\\] - [rubi cock]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**Typical Noun usages**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("* [cock] stiffening [cock biggest] and [vagina] starting to burn with need\n");
    EngineCore.outputText("* [cock all] stiffening [cock each] and [cock 1] starting to burn with need\n");
    EngineCore.outputText("* [cockhead biggest] stiffening [cockhead smallest] and [cockhead longest] and [cockhead 1] starting to burn with need\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**Complex IF Statement thing**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("\\\[if (hasCock = true) \\\[cock\\\] stiffening IFSTUFF \\\[if (hasVagina = true) \\\[vagina\\\] starting to burn with need\\\] IFSTUFFDONE\\\]\\\[if (isHerm = true) and \\\]\\\[if (hasVagina = true) \\\[vagina\\\] starting to burn with need\\\]\n");
    EngineCore.outputText("[if (hasCock = true) [cock] stiffening IFSTUFF [if (hasVagina = true) [vagina] starting to burn with need] IFSTUFFDONE][if (isHerm = true) and ][if (hasVagina = true) [vagina] starting to burn with need]\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("**FancyQuotes!**\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("Convert Apostrophes '\n");
    EngineCore.outputText("It's a herm!\n");
    EngineCore.outputText("\n\n");
    EngineCore.outputText("convert \"\n");
    EngineCore.outputText("\"derp a herp\"\n");
    EngineCore.menu();
    EngineCore.addButton(4, "Back", debugPane)

}
}